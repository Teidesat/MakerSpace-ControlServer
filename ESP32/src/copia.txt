//Salvador Pérez del Pino
//Código para los ESP32 que actúan como lectores de tarjetas RFID
//Solo lectura, prohibida escritura
#include <Arduino.h>
#include <WiFi.h>
#include <SPI.h>
#include <MFRC522.h>
#include <HTTPClient.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels


#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


#define SS_PIN          2
#define RST_PIN         4
#define SIZE_BUFFER     18
#define MAX_SIZE_BLOCK  16
#define greenPin        12
#define redPin          32
#define PERM            "ARM1"

//const char* ssid = "SSID DEL WIFI DE LA RASPBERRY";
//const char* password = "CONTRASEÑA DEL WIFI DE LA RASPBERRY";

//String serverName = "http://127.0.0.1/getdata.php";


MFRC522::MIFARE_Key key;
MFRC522::StatusCode status;
MFRC522 mfrc522(SS_PIN, RST_PIN);

void dump_byte_array(byte *buffer, byte bufferSize) {
    for (byte i = 0; i < bufferSize; i++) {
        Serial.println(buffer[i] < 0x10 ? " 0" : " ");
        Serial.println(buffer[i], HEX);
    }
}


void setup() {

    
    pinMode(greenPin, OUTPUT);
    pinMode(redPin, OUTPUT);
    digitalWrite(greenPin, LOW);
    digitalWrite(redPin, LOW);
    Serial.begin(9600);
    SPI.begin();
    //display.display();

    //WiFi.mode(WIFI_STA);
    //WiFi.begin(ssid, password); //Establece la conexión

    /*Serial.print("Connecting to WiFi ..");
    while (WiFi.status() != WL_CONNECTED) {
        Serial.print('.');
        delay(1000);
    }

    Serial.println(WiFi.localIP());
    Serial.print("RRSI: ");
    Serial.println(WiFi.RSSI());*/

    mfrc522.PCD_Init();

    for (byte i = 0; i < 6; i++) { //En caso de usar FF FF FF FF FF FF
            key.keyByte[i] = 0xFF;
        }

}

void loop(){
    if (!mfrc522.PICC_IsNewCardPresent()){
        //Serial.println("No se detecta tarjeta");
        digitalWrite(greenPin, LOW);
        digitalWrite(redPin, LOW);
        delay(1000);
        return;
    } 
    
    if( !mfrc522.PICC_ReadCardSerial()) {
        
        return;
    }

    //Muestra información de la tarjeta
    Serial.println("Tarjeta detectada");
    digitalWrite(greenPin, HIGH);
    digitalWrite(redPin, HIGH);
    Serial.println(F("Card UID:"));
    dump_byte_array(mfrc522.uid.uidByte, mfrc522.uid.size);
    Serial.println("Detalles: ");
    mfrc522.PICC_DumpDetailsToSerial(&(mfrc522.uid));
    Serial.println("Más detalles: ");
    mfrc522.PICC_DumpToSerial(&(mfrc522.uid)); 

    delay(5000);
}








